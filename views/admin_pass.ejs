<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link
      href="https://fonts.googleapis.com/css2?family=Ubuntu:wght@400;500;700&display=swap"
      rel="stylesheet"
    />
    <link rel="shortcut icon" href="/favicon.png" type="image/x-icon">
    <title>App Team</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            background: linear-gradient(135deg, #140b29 0%, #1a0f3a 50%, #0f0520 100%);
            color: #ffffff;
            font-family: 'ubuntu', sans-serif;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            overflow: hidden;
            position: relative;

        }

        .content {
            text-align: center;
            z-index: 10;
            position: relative;
        }

        .access-title {
            font-size: 3.5rem;
            font-weight: 700;
            color: #ff4757;
            margin-bottom: 20px;
            text-shadow: 0 0 20px rgba(255, 71, 87, 0.5);
            animation: pulse 2s infinite;
        }

        .access-subtitle {
            font-size: 1.5rem;
            color: #c87fff;
            margin-bottom: 15px;
            font-weight: 500;
        }

        .access-message {
            font-size: 1.1rem;
            color: #ffffff;
            margin-bottom: 40px;
            opacity: 0.9;
            font-style: italic;
        }

        .home-btn {
            background: linear-gradient(135deg, #8b5cf6, #a855f7);
            color: white;
            border: none;
            padding: 15px 30px;
            border-radius: 12px;
            font-size: 1.1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 8px 32px rgba(139, 92, 246, 0.3);
            text-decoration: none;
            display: inline-block;
        }

        .home-btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 12px 48px rgba(139, 92, 246, 0.5);
            background: linear-gradient(135deg, #7c3aed, #9333ea);
        }

        .home-btn:active {
            transform: translateY(-1px);
        }

        .bubble {
            position: absolute;
            border-radius: 50%;
            pointer-events: none;
            animation: bubbleFloat 3s ease-out forwards;
            box-shadow: 0 0 20px rgba(139, 92, 246, 0.6);
        }



        @keyframes pulse {
            0%, 100% {
                transform: scale(1);
                text-shadow: 0 0 20px rgba(255, 71, 87, 0.5);
            }
            50% {
                transform: scale(1.05);
                text-shadow: 0 0 30px rgba(255, 71, 87, 0.8);
            }
        }

        @keyframes bubbleFloat {
            0% {
                opacity: 0.8;
                transform: translateY(0) scale(0);
            }
            50% {
                opacity: 1;
                transform: translateY(-100px) scale(1);
            }
            100% {
                opacity: 0;
                transform: translateY(-200px) scale(0.5);
            }
        }

        .warning-icon {
            font-size: 4rem;
            color: #ff4757;
            margin-bottom: 20px;
            animation: bounce 2s infinite;
        }

        @keyframes bounce {
            0%, 20%, 50%, 80%, 100% {
                transform: translateY(0);
            }
            40% {
                transform: translateY(-10px);
            }
            60% {
                transform: translateY(-5px);
            }
        }

        @media (max-width: 767px) {
            .access-title {
                font-size: 2.5rem;
            }
            
            .access-subtitle {
                font-size: 1.2rem;
            }
            
            .access-message {
                font-size: 1rem;
            }
        }
    </style>
</head>
<body>

    <div class="content">
        <div class="warning-icon">⚠️</div>
        <h1 class="access-title">ACCESS DENIED</h1>
        <h2 class="access-subtitle">Only Admins Can Reach!</h2>
        <p class="access-message">(If you're the admin enter the pass on the route)</p>
        <a href="/" class="home-btn">Return to Home Page</a>
    </div>

    <script>
        const cursor = null;
        const bubbleColors = [
            'rgba(139, 92, 246, 0.7)',
            'rgba(168, 85, 247, 0.7)',
            'rgba(192, 132, 252, 0.7)',
            'rgba(196, 181, 253, 0.7)',
            'rgba(233, 213, 255, 0.6)'
        ];

        let mouseX = 0;
        let mouseY = 0;

        // Mouse movement for bubble effect
        document.addEventListener('mousemove', (e) => {
            mouseX = e.clientX;
            mouseY = e.clientY;
            
            // Create bubble effect
            createBubble(mouseX, mouseY);
        });

        function createBubble(x, y) {
            const bubble = document.createElement('div');
            bubble.className = 'bubble';
            
            const size = Math.random() * 30 + 10;
            const color = bubbleColors[Math.floor(Math.random() * bubbleColors.length)];
            
            bubble.style.width = size + 'px';
            bubble.style.height = size + 'px';
            bubble.style.left = (x - size/2) + 'px';
            bubble.style.top = (y - size/2) + 'px';
            bubble.style.background = `radial-gradient(circle, ${color}, transparent)`;
            
            // Add some randomness to bubble movement
            const randomX = (Math.random() - 0.5) * 100;
            bubble.style.setProperty('--random-x', randomX + 'px');
            
            document.body.appendChild(bubble);
            
            // Remove bubble after animation
            setTimeout(() => {
                if (bubble.parentNode) {
                    bubble.parentNode.removeChild(bubble);
                }
            }, 3000);
        }



        // Add click effect
        document.addEventListener('click', (e) => {
            for (let i = 0; i < 5; i++) {
                setTimeout(() => {
                    createBubble(
                        e.clientX + (Math.random() - 0.5) * 50,
                        e.clientY + (Math.random() - 0.5) * 50
                    );
                }, i * 50);
            }
        });
    </script>
</body>
</html>